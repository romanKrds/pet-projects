@charset "UTF-8";
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
  margin: 0;
  padding: 0; }

article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after, q:before, q:after {
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

/*# sourceMappingURL=reset.css.map */
/*--------------------------------------------------

  @@ CONTAINER

  Containers provide a means to center your site’s contents. Use .container for fixed width or .container-fluid for full width.
--------------------------------------------------*/
.container {
  width: 90%;
  margin: 0 auto; }

@media (min-width: 576px) {
  .container {
    max-width: 540px; } }

@media (min-width: 768px) {
  .container {
    max-width: 720px; } }

@media (min-width: 992px) {
  .container {
    max-width: 960px; } }

@media (min-width: 1200px) {
  .container {
    max-width: 1140px; } }

.container-fluid {
  width: 100%;
  margin: 0 auto; }

/*--------------------------------------------------
  
    @@ ROW

    ! 12 columns in a row
  
    Rows are horizontal groups of columns that ensure your columns are lined up properly.
  --------------------------------------------------*/
.row {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  grid-gap: 20px;
  padding: 0 15px; }

.content {
  background: #ff9696; }

.no-gap {
  grid-gap: 0; }

/*--------------------------------------------------
  
    @@ SPANS
  
    The number of columns you’d like to use out of the possible 12 per row.
  --------------------------------------------------*/
.span2 {
  grid-column: auto / span 2; }

.span3 {
  grid-column: auto / span 3; }

.span4 {
  grid-column: auto / span 4; }

.span5 {
  grid-column: auto / span 5; }

.span6 {
  grid-column: auto / span 6; }

.span7 {
  grid-column: auto / span 7; }

.span8 {
  grid-column: auto / span 8; }

.span9 {
  grid-column: auto / span 9; }

.span10 {
  grid-column: auto / span 10; }

.span11 {
  grid-column: auto / span 11; }

.span12 {
  grid-column: auto / span 12; }

/*--------------------------------------------------
  
    @@ OFFSET
  
    The number of the column where content should be inserted
  --------------------------------------------------*/
.col-1 {
  grid-column: 1; }

.col-2 {
  grid-column: 2; }

.col-3 {
  grid-column: 3; }

.col-4 {
  grid-column: 4; }

.col-5 {
  grid-column: 5; }

.col-6 {
  grid-column: 6; }

.col-7 {
  grid-column: 7; }

.col-8 {
  grid-column: 8; }

.col-9 {
  grid-column: 9; }

.col-10 {
  grid-column: 10; }

.col-11 {
  grid-column: 11; }

.col-12 {
  grid-column: 12; }

/*--------------------------------------------------
  
    @@ OFFSET & SPAN
  
    Manging offseting and column width
  --------------------------------------------------*/
.col-1.span2 {
  grid-column: 1 / span 2; }

.col-1.span3 {
  grid-column: 1 / span 3; }

.col-1.span4 {
  grid-column: 1 / span 4; }

.col-1.span5 {
  grid-column: 1 / span 5; }

.col-1.span6 {
  grid-column: 1 / span 6; }

.col-1.span7 {
  grid-column: 1 / span 7; }

.col-1.span8 {
  grid-column: 1 / span 8; }

.col-1.span9 {
  grid-column: 1 / span 9; }

.col-1.span10 {
  grid-column: 1 / span 10; }

.col-1.span11 {
  grid-column: 1 / span 11; }

.col-1.span12 {
  grid-column: 1 / span 12; }

.col-2.span2 {
  grid-column: 2 / span 2; }

.col-2.span3 {
  grid-column: 2 / span 3; }

.col-2.span4 {
  grid-column: 2 / span 4; }

.col-2.span5 {
  grid-column: 2 / span 5; }

.col-2.span6 {
  grid-column: 2 / span 6; }

.col-2.span7 {
  grid-column: 2 / span 7; }

.col-2.span8 {
  grid-column: 2 / span 8; }

.col-2.span9 {
  grid-column: 2 / span 9; }

.col-2.span10 {
  grid-column: 2 / span 10; }

.col-2.span11 {
  grid-column: 2 / span 11; }

.col-3.span2 {
  grid-column: 3 / span 2; }

.col-3.span3 {
  grid-column: 3 / span 3; }

.col-3.span4 {
  grid-column: 3 / span 4; }

.col-3.span5 {
  grid-column: 3 / span 5; }

.col-3.span6 {
  grid-column: 3 / span 6; }

.col-3.span7 {
  grid-column: 3 / span 7; }

.col-3.span8 {
  grid-column: 3 / span 8; }

.col-3.span9 {
  grid-column: 3 / span 9; }

.col-3.span10 {
  grid-column: 3 / span 10; }

.col-4.span2 {
  grid-column: 4 / span 2; }

.col-4.span3 {
  grid-column: 4 / span 3; }

.col-4.span4 {
  grid-column: 4 / span 4; }

.col-4.span5 {
  grid-column: 4 / span 5; }

.col-4.span6 {
  grid-column: 4 / span 6; }

.col-4.span7 {
  grid-column: 4 / span 7; }

.col-4.span8 {
  grid-column: 4 / span 8; }

.col-4.span9 {
  grid-column: 4 / span 9; }

.col-5.span2 {
  grid-column: 5 / span 2; }

.col-5.span3 {
  grid-column: 5 / span 3; }

.col-5.span4 {
  grid-column: 5 / span 4; }

.col-5.span5 {
  grid-column: 5 / span 5; }

.col-5.span6 {
  grid-column: 5 / span 6; }

.col-5.span7 {
  grid-column: 5 / span 7; }

.col-5.span8 {
  grid-column: 5 / span 8; }

.col-6.span2 {
  grid-column: 6 / span 2; }

.col-6.span3 {
  grid-column: 6 / span 3; }

.col-6.span4 {
  grid-column: 6 / span 4; }

.col-6.span5 {
  grid-column: 6 / span 5; }

.col-6.span6 {
  grid-column: 6 / span 6; }

.col-6.span7 {
  grid-column: 6 / span 7; }

.col-7.span2 {
  grid-column: 7 / span 2; }

.col-7.span3 {
  grid-column: 7 / span 3; }

.col-7.span4 {
  grid-column: 7 / span 4; }

.col-7.span5 {
  grid-column: 7 / span 5; }

.col-7.span6 {
  grid-column: 7 / span 6; }

.col-8.span2 {
  grid-column: 8 / span 2; }

.col-8.span3 {
  grid-column: 8 / span 3; }

.col-8.span4 {
  grid-column: 8 / span 4; }

.col-8.span5 {
  grid-column: 8 / span 5; }

.col-9.span2 {
  grid-column: 9 / span 2; }

.col-9.span3 {
  grid-column: 9 / span 3; }

.col-9.span4 {
  grid-column: 9 / span 4; }

.col-10.span2 {
  grid-column: 10 / span 2; }

.col-10.span3 {
  grid-column: 10 / span 3; }

.col-11.span2 {
  grid-column: 11 / span 2; }

.headline {
  font-size: 50px;
  font-weight: 500;
  margin: 15px 0; }

.subheadline {
  font-size: 30px;
  font-weight: 500;
  margin: 15px 0;
  text-align: center; }
